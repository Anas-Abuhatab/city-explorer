{"version":3,"sources":["components/Weather.js","components/Form.js","components/ErrorCard.js","components/BSimg.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","Card","Header","as","Body","Title","this","props","display_location","Text","latitude","longitude","console","log","shoWeather","split","weatherData","map","item","data","description","Component","Form","onSubmit","handleSubmit","type","placeholder","onChange","handleLocation","value","ErrorCard","Alert","variant","Heading","BSimg","src","process","alt","App","e","display_name","target","setState","preventDefault","config","method","baseURL","state","axios","then","res","responseData","lon","lat","showData","status","showError","city_name","get","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.561dcc04.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Card,\n\n} from 'react-bootstrap';\n\nclass Weather extends Component {\n\n\n    render() {\n        return (\n            <div>\n\n                \n                <Card>\n                    <Card.Header as=\"h5\">Location Info</Card.Header>\n                    <Card.Body>\n                        <Card.Title>{this.props.display_location}</Card.Title>\n                        <Card.Text>\n                            latitude: {this.props.latitude} longitude: {this.props.longitude}\n                        </Card.Text>\n\n                    </Card.Body>\n                </Card>\n    \n                {   \n                  console.log(this.props.shoWeather),\n              (this.props.shoWeather &&  <Card>\n                        <Card.Header as=\"h5\">Weather Info</Card.Header>\n                        <Card.Body>\n                            <Card.Title>{this.props.display_location.split(',')[0]}</Card.Title>\n                            <Card.Text>\n                                {\n                                    this.props.weatherData.map(item => {\n                                        return (\n                                            <div>\n                                                <h2>{item.data}</h2>\n                                                <h2>{item.description}</h2>\n                                                <h4>*******************</h4>\n                                            </div>\n                                        )\n                                    })\n\n                                }\n                            </Card.Text>\n\n                        </Card.Body>\n                    </Card>)\n    }\n            </div>\n                            \n        )\n        \n    }\n}\n\nexport default Weather\n","import React, { Component } from 'react';\nclass Form extends Component {\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.props.handleSubmit}>\n                    <input type=\"text\"\n\n                        placeholder=\"Please interr city name\"\n                        onChange={this.props.handleLocation}\n                    />\n                    <input type=\"submit\"\n                        value=\"Explore\"\n                    />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Form\n","import React, { Component } from 'react';\nimport {\n    Alert\n} from 'react-bootstrap'\n\nclass ErrorCard extends Component {\n    render() {\n        return (\n            <Alert variant=\"danger\"  >\n                <Alert.Heading>\"error\": \"Unable to geocode\"</Alert.Heading>\n            </Alert>\n        )\n    }\n}\nexport default ErrorCard\n","import React, { Component } from 'react';\nclass BSimg extends Component {\n    render() {\n        return (\n            <div>\n                {<img src={`https://maps.locationiq.com/v3/staticmap?\n                        key=${process.env.REACT_APP_LOCATIONIQ_API_KEY}\n                &center=${this.props.latitude},${this.props.longitude}&zoom=1-18`} alt=\"jhhy\" />\n                }\n            </div>\n        )\n    }\n}\n\nexport default BSimg\n\n","import { React, Component } from 'react';\nimport Weather from './components/Weather';\nimport axios from \"axios\";\nimport Form from './components/Form';\nimport ErrorCard from './components/ErrorCard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport BSimg from './components/BSimg';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display_name: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      showData: false,\n      showError: false,\n      weatherData: [],\n      status: \"\",\n      display_location: \"\",\n      shoWeather:false\n    }\n  }\n\n  handleLocation = (e) => {\n    let display_name = e.target.value;\n    this.setState({\n      display_name: display_name\n    })\n  }\n\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let config = {\n      method: \"GET\",\n      baseURL: `https://api.locationiq.com/v1/autocomplete.php?\n      key=${process.env.REACT_APP_LOCATIONIQ_API_KEY}&q=${this.state.display_name}`\n    }\n    axios(config).then(res => {\n      let responseData = res.data[0]\n      this.setState({\n        display_location: responseData.display_name,\n        longitude: responseData.lon,\n        latitude: responseData.lat,\n        showData: true,\n        status: \"\",\n        showError: false,\n        \n      });\n    })\n      .then(() => {\n       let city_name=this.state.display_location.split(',')[0];\n       console.log(city_name)\n        axios.get(`http://${process.env.REACT_APP_BACKEND_URL}/weather?search=${city_name}&lat=${this.state.latitude}&lon=${this.state.longitude}`)\n        .then((res) => {\n            this.setState({\n              weatherData: res.data,\n              status: \"\",\n              showError: false,\n              shoWeather:true\n            })\n            \n          }).catch(err => {\n            console.log(err)\n            this.setState({\n              status: \"error: Something went wrong. Please inter (Amman,Paris,Seattle) for weather info\",\n              weatherData: [],\n              shoWeather:false\n            })\n          })\n      }).catch(err => {\n        console.log(err)\n        this.setState({\n          weatherData: [],\n          showError: true,\n          shoWeather:false\n        })\n      })\n  }\n  render() {\n    return (\n\n      <div>\n        <h1> City Explorer</h1>\n       \n        <Form handleSubmit={this.handleSubmit}\n          handleLocation={this.handleLocation} />\n           {\n          this.state.showError && <ErrorCard />\n        }\n        {this.state.showData &&\n          <Weather\n          shoWeather={this.state.shoWeather}\n            display_location={this.state.display_location}\n            latitude={this.state.latitude}\n            longitude={this.state.longitude} \n            weatherData={this.state.weatherData}/>\n        }\n      \n        <h2>{this.state.status}</h2>\n\n        <BSimg latitude={this.state.latitude}\n          longitude={this.state.longitude} />\n\n\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}